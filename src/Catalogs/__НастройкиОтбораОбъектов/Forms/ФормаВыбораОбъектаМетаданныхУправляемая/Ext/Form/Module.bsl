
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекущийОбъект = Параметры.ТекущийОбъект;
	ТипТекущегоОбъекта = Параметры.ТипТекущегоОбъекта;
	
	ВидОперации = Параметры.ВидОперации;
	СписокТипов = Параметры.СписокТипов;
	ВыводитьТЧОбъектов = Параметры.ВыводитьТЧОбъектов;
	
	ЭтаФорма.ЗакрыватьПриВыборе = Истина;
	ЭтаФорма.ЗакрыватьПриЗакрытииВладельца = Истина;
	
	Если ВидОперации = "ВыборОбъекта" Тогда
		ВывестиОбъекты();
	ИначеЕсли ВидОперации = "ВыборКартинки" Тогда
		ВывестиКартинки();
	КонецЕсли;
	
	СортироватьДерево(Дерево);
КонецПроцедуры

&НаСервере
Процедура ВывестиОбъекты()
	СтрокиДерева = Дерево.ПолучитьЭлементы();
	
	Если СписокТипов.НайтиПоЗначению("Справочники") <> Неопределено Тогда
		//Выводим Справочники
		МетаданныеСправочники = Метаданные.Справочники;
		СтрокаСправочник = СтрокиДерева.Добавить();
		СтрокаСправочник.Поле = "Справочники";
		СтрокаСправочник.ТипЗначения = "Справочник";
		СтрокаСправочник.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаСправочник.ПолучитьЭлементы();
		
		Для Каждого Справочник Из МетаданныеСправочники Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = Справочник.Синоним;
			НоваяСтрока.ИдентификаторПоля = Справочник.Имя;
			НоваяСтрока.ТипЗначения = "Справочник";
			
			ПодчиненныеСтроки2 = НоваяСтрока.ПолучитьЭлементы();
			
			Если ВыводитьТЧОбъектов Тогда
				Для Каждого ТЧ Из Справочник.ТабличныеЧасти Цикл
					НоваяСтрокаТЧ = ПодчиненныеСтроки2.Добавить();
					НоваяСтрокаТЧ.Поле = ТЧ.Синоним;
					НоваяСтрокаТЧ.ИдентификаторПоля = Справочник.Имя + "." + ТЧ.Имя;
					НоваяСтрокаТЧ.ТипЗначения = "Справочник";
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("Документы") <> Неопределено Тогда
		//Выводим документы
		МетаданныеДокументы = Метаданные.Документы;
		СтрокаДокумент = СтрокиДерева.Добавить();
		СтрокаДокумент.Поле = "Документы";
		СтрокаДокумент.ТипЗначения = "Документ";
		СтрокаДокумент.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаДокумент.ПолучитьЭлементы();
		
		Для Каждого Документ Из МетаданныеДокументы Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = Документ.Синоним;
			НоваяСтрока.ИдентификаторПоля = Документ.Имя;
			НоваяСтрока.ТипЗначения = "Документ";
			
			ПодчиненныеСтроки2 = НоваяСтрока.ПолучитьЭлементы();
			
			Если ВыводитьТЧОбъектов Тогда
				Для Каждого ТЧ Из Документ.ТабличныеЧасти Цикл
					НоваяСтрокаТЧ = ПодчиненныеСтроки2.Добавить();
					НоваяСтрокаТЧ.Поле = ТЧ.Синоним;
					НоваяСтрокаТЧ.ИдентификаторПоля = Документ.Имя + "." + ТЧ.Имя;
					НоваяСтрокаТЧ.ТипЗначения = "Документ";
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("Отчеты") <> Неопределено Тогда
		//Выводим Отчеты
		МетаданныеОтчеты = Метаданные.Отчеты;
		СтрокаОтчет = СтрокиДерева.Добавить();
		СтрокаОтчет.Поле = "Отчеты";
		СтрокаОтчет.ТипЗначения = "Отчет";
		СтрокаОтчет.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаОтчет.ПолучитьЭлементы();
		
		Для Каждого Отчет Из МетаданныеОтчеты Цикл
			//РеквизитУниверсальныйОтчет = Отчет.Реквизиты.Найти("УниверсальныйОтчет");
			//Если РеквизитУниверсальныйОтчет <> Неопределено Тогда
				НоваяСтрока = ПодчиненныеСтроки.Добавить();
				НоваяСтрока.Поле = Отчет.Синоним;
				НоваяСтрока.ИдентификаторПоля = Отчет.Имя;
				НоваяСтрока.ТипЗначения = "Отчет";
			//КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("Обработки") <> Неопределено Тогда
		//Выводим Обработки
		МетаданныеОбработки = Метаданные.Обработки;
		СтрокаОбработка = СтрокиДерева.Добавить();
		СтрокаОбработка.Поле = "Обработки";
		СтрокаОбработка.ТипЗначения = "Обработка";
		СтрокаОбработка.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаОбработка.ПолучитьЭлементы();
		
		Для Каждого Обработка Из МетаданныеОбработки Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = Обработка.Синоним;
			НоваяСтрока.ИдентификаторПоля = Обработка.Имя;
			НоваяСтрока.ТипЗначения = "Обработка";
		КонецЦикла;
	КонецЕсли;
	
	//Если СписокТипов.НайтиПоЗначению("ВнешниеОбработки") <> Неопределено Тогда
	//	//Выводим Внешние обработки
	//	НоваяСтрока = СтрокиДерева.Добавить();
	//	НоваяСтрока.Поле = "Внешняя обработка";
	//	НоваяСтрока.ТипЗначения = "ВнешняяОбработка";
	//КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("ПланыВидовХарактеристик") <> Неопределено Тогда
		//Выводим ПВХ
		МетаданныеПВХ = Метаданные.ПланыВидовХарактеристик;
		СтрокаПВХ = СтрокиДерева.Добавить();
		СтрокаПВХ.Поле = "Планы видов характеристик";
		СтрокаПВХ.ТипЗначения = "ПланВидовХарактеристик";
		СтрокаПВХ.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаПВХ.ПолучитьЭлементы();
		
		Для Каждого ПВХ Из МетаданныеПВХ Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = ПВХ.Синоним;
			НоваяСтрока.ИдентификаторПоля = ПВХ.Имя;
			НоваяСтрока.ТипЗначения = "ПланВидовХарактеристик";
		КонецЦикла;
	КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("ПланыСчетов") <> Неопределено Тогда
		//Выводим Планы счетов
		МетаданныеПланыСчетов = Метаданные.ПланыСчетов;
		СтрокаПланСчетов = СтрокиДерева.Добавить();
		СтрокаПланСчетов.Поле = "Планы счетов";
		СтрокаПланСчетов.ТипЗначения = "ПланСчетов";
		СтрокаПланСчетов.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаПланСчетов.ПолучитьЭлементы();
		
		Для Каждого ПланСчетов Из МетаданныеПланыСчетов Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = ПланСчетов.Синоним;
			НоваяСтрока.ИдентификаторПоля = ПланСчетов.Имя;
			НоваяСтрока.ТипЗначения = "ПланСчетов";
		КонецЦикла;
	КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("ПланыВидовРасчета") <> Неопределено Тогда
		//Выводим планы видов расчета
		МетаданныеПВР = Метаданные.ПланыВидовРасчета;
		СтрокаПВР = СтрокиДерева.Добавить();
		СтрокаПВР.Поле = "Планы видов расчета";
		СтрокаПВР.ТипЗначения = "ПланВидовРасчета";
		СтрокаПВР.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаПВР.ПолучитьЭлементы();
		
		Для Каждого ПВР Из МетаданныеПВР Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = ПВР.Синоним;
			НоваяСтрока.ИдентификаторПоля = ПВР.Имя;
			НоваяСтрока.ТипЗначения = "ПланВидовРасчета";
		КонецЦикла;
	КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("РегистрыСведений") <> Неопределено Тогда
		//Выводим Регистры сведений
		МетаданныеРС = Метаданные.РегистрыСведений;
		СтрокаРС = СтрокиДерева.Добавить();
		СтрокаРС.Поле = "Регистры сведений";
		СтрокаРС.ТипЗначения = "РегистрСведений";
		СтрокаРС.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаРС.ПолучитьЭлементы();
		
		Для Каждого РС Из МетаданныеРС Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = РС.Синоним;
			НоваяСтрока.ИдентификаторПоля = РС.Имя;
			НоваяСтрока.ТипЗначения = "РегистрСведений";
		КонецЦикла;
	КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("РегистрыНакопления") <> Неопределено Тогда
		//Выводим Регистры накопления
		МетаданныеРН = Метаданные.РегистрыНакопления;
		СтрокаРН = СтрокиДерева.Добавить();
		СтрокаРН.Поле = "Регистры накопления";
		СтрокаРН.ТипЗначения = "РегистрНакопления";
		СтрокаРН.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаРН.ПолучитьЭлементы();
		
		Для Каждого РН Из МетаданныеРН Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = РН.Синоним;
			НоваяСтрока.ИдентификаторПоля = РН.Имя;
			НоваяСтрока.ТипЗначения = "РегистрНакопления";
		КонецЦикла;
	КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("РегистрыБухгалтерии") <> Неопределено Тогда
		//Выводим Регистры бухгалтерии
		МетаданныеРБ = Метаданные.РегистрыБухгалтерии;
		СтрокаРБ = СтрокиДерева.Добавить();
		СтрокаРБ.Поле = "Регистры бухгалтерии";
		СтрокаРБ.ТипЗначения = "РегистрБухгалтерии";
		СтрокаРБ.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаРБ.ПолучитьЭлементы();
		
		Для Каждого РБ Из МетаданныеРБ Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = РБ.Синоним;
			НоваяСтрока.ИдентификаторПоля = РБ.Имя;
			НоваяСтрока.ТипЗначения = "РегистрБухгалтерии";
		КонецЦикла;
	КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("РегистрыРасчета") <> Неопределено Тогда
		//Выводим Регистры расчета
		МетаданныеРР = Метаданные.РегистрыРасчета;
		СтрокаРР = СтрокиДерева.Добавить();
		СтрокаРР.Поле = "Регистры расчета";
		СтрокаРР.ТипЗначения = "РегистрРасчета";
		СтрокаРР.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаРР.ПолучитьЭлементы();
		
		Для Каждого РР Из МетаданныеРР Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = РР.Синоним;
			НоваяСтрока.ИдентификаторПоля = РР.Имя;
			НоваяСтрока.ТипЗначения = "РегистрРасчета";
		КонецЦикла;
	КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("БизнесПроцессы") <> Неопределено Тогда
		//Выводим Бизнес-процессы
		МетаданныеБП = Метаданные.БизнесПроцессы;
		СтрокаБП = СтрокиДерева.Добавить();
		СтрокаБП.Поле = "Бизнес-процессы";
		СтрокаБП.ТипЗначения = "БизнесПроцесс";
		СтрокаБП.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаБП.ПолучитьЭлементы();
		
		Для Каждого БП Из МетаданныеБП Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = БП.Синоним;
			НоваяСтрока.ИдентификаторПоля = БП.Имя;
			НоваяСтрока.ТипЗначения = "БизнесПроцесс";
		КонецЦикла;
	КонецЕсли;
	
	Если СписокТипов.НайтиПоЗначению("Задачи") <> Неопределено Тогда
		//Выводим Задачи
		МетаданныеЗадачи = Метаданные.Задачи;
		СтрокаЗадачи = СтрокиДерева.Добавить();
		СтрокаЗадачи.Поле = "Задачи";
		СтрокаЗадачи.ТипЗначения = "Задача";
		СтрокаЗадачи.Служебное = Истина;
		
		ПодчиненныеСтроки = СтрокаЗадачи.ПолучитьЭлементы();
		
		Для Каждого Задача Из МетаданныеЗадачи Цикл
			НоваяСтрока = ПодчиненныеСтроки.Добавить();
			НоваяСтрока.Поле = Задача.Синоним;
			НоваяСтрока.ИдентификаторПоля = Задача.Имя;
			НоваяСтрока.ТипЗначения = "Задача";
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВывестиКартинки()
	СтрокиДерева = Дерево.ПолучитьЭлементы();
	
	Если СписокТипов.НайтиПоЗначению("Картинки") <> Неопределено Тогда
		//Выводим Справочники
		СтрокаКартинка = СтрокиДерева.Добавить();
		СтрокаКартинка.Поле = "Картинки";
		СтрокаКартинка.ТипЗначения = "Картинка";
		СтрокаКартинка.Служебное = Истина;
		
		СтрокиДерева = СтрокаКартинка.ПолучитьЭлементы();
		
		Для Каждого Картинка Из Метаданные.ОбщиеКартинки Цикл
			НоваяСтрока = СтрокиДерева.Добавить();
			НоваяСтрока.Поле = ?(ЗначениеЗаполнено(Картинка.Синоним), Картинка.Синоним, Картинка.Имя);
			НоваяСтрока.ИдентификаторПоля = Картинка.Имя;
			НоваяСтрока.ТипЗначения = "Картинка";
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СортироватьДерево(ДеревоСортировки)
	//ДеревоСортировки.Строки.Сортировать("Поле Возр");
	//
	//Для Каждого СтрокаДерева Из ДеревоСортировки.Строки Цикл
	//	СортироватьДерево(СтрокаДерева);
	//КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОбработкаВыбораСтроки(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораСтроки(ТекущаяСтрока)
	ТекущаяСтрока = Элементы.Дерево.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТекущаяСтрока.Служебное Тогда
		ОповеститьОВыборе(ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры