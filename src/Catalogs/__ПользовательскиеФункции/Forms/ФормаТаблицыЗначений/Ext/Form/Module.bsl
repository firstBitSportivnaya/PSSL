// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8,
// включая доработку типовых конфигураций.
//
// Copyright First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
//

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АдресЗначения", АдресЗначения) Тогда
		Таблица = ПолучитьИзВременногоХранилища(АдресЗначения);
		Если Таблица <> Неопределено Тогда
			Для Каждого Колонка Из Таблица.Колонки Цикл
				// Заполняем таблицу колонок
				нСтрока = КолонкиТаблицыЗначений.Добавить();
				ЗаполнитьЗначенияСвойств(нСтрока, Колонка);
			КонецЦикла;
			// Создаем реквизиты формы, выводим таблицу формы
			ПоказатьТаблицу = Истина;
			ОбновитьТаблицуСтрок();
			// Заполняем таблицу строк
			Для Каждого Стр Из Таблица Цикл
				нСтрока = СтрокиТаблицыЗначений.Добавить();
				ЗаполнитьЗначенияСвойств(нСтрока, Стр);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если СохранитьРезультат Тогда
		Адрес = АдресТаблицыВХранилище();
		ОповеститьОВыборе(Новый Структура("Адрес", Адрес));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКолонкиТаблицыЗначений

&НаКлиенте
Процедура КолонкиТаблицыЗначенийИмяПриИзменении(Элемент)
	ТекДанные = Элементы.КолонкиТаблицыЗначений.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Имя) Тогда
		Результат = СтрЗаменить(ТекДанные.Имя, " ", "");
		__ОбщегоНазначенияКлиентСервер.УдалитьНедопустимыеСимволы(Результат);
		ТекДанные.Имя = Результат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КолонкиТаблицыЗначенийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = Элементы.КолонкиТаблицыЗначений.ТекущиеДанные;
	ТекДанные.Имя = "Колонка_";
	// Установим тип по умолчанию "Строка"
	ТекДанные.ТипЗначения = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КолонкиСтроки(Команда)
	УстановитьВидимостьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьРезультат(Команда)
	СохранитьРезультат = Истина;
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ОчиститьНеиспользуемыеНастройки(Адрес)
	УдалитьИзВременногоХранилища(Адрес);
КонецПроцедуры

&НаСервере
Функция АдресТаблицыВХранилище()
	
	Адрес = "";
	Если ЗначениеЗаполнено(СтрокиТаблицыЗначений) Тогда
		УИД = ?(ПустаяСтрока(АдресЗначения), Новый УникальныйИдентификатор, АдресЗначения);
		ТаблицаЗначений = СтрокиТаблицыЗначений.Выгрузить();
		Адрес = ПоместитьВоВременноеХранилище(ТаблицаЗначений, УИД);
	Иначе
		ОчиститьНеиспользуемыеНастройки(АдресЗначения);
	КонецЕсли;
	
	Возврат Адрес;
	
КонецФункции

&НаСервере
Процедура ОбновитьТаблицуСтрок()
	
	ИменаКолонок = Новый Массив;
	Для Каждого Реквизит Из КолонкиТаблицыЗначений Цикл
		ИменаКолонок.Добавить(Реквизит.Имя);
	КонецЦикла;
	
	ИмяТаблицы = "СтрокиТаблицыЗначений";
	РеквизитыТаблицы = ПолучитьРеквизиты(ИмяТаблицы);
	ИменаРеквизитов = Новый Массив();
	
	УдаляемыеРеквизиты = Новый Массив;
	Для Каждого Реквизит Из РеквизитыТаблицы Цикл
		ИменаРеквизитов.Добавить(Реквизит.Имя);
		Если ИменаКолонок.Найти(Реквизит.Имя) = Неопределено Тогда
			УдаляемыеРеквизиты.Добавить(ИмяТаблицы + "." + Реквизит.Имя);
			__РаботаСФормами.УдалитьЭлемент(ЭтотОбъект, ИмяТаблицы + Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	
	ДобавляемыеРеквизиты = Новый Массив;
	Для Каждого Колонка Из КолонкиТаблицыЗначений Цикл
		Если ИменаРеквизитов.Найти(Колонка.Имя) = Неопределено Тогда
			НовыйРеквизит = Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ИмяТаблицы);
			ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(УдаляемыеРеквизиты) И Не ЗначениеЗаполнено(ДобавляемыеРеквизиты) Тогда
		Возврат;
	КонецЕсли;
		
	НачатьТранзакцию();
	Попытка
		
		ИзменитьРеквизиты(, УдаляемыеРеквизиты);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		Для Каждого Реквизит Из ДобавляемыеРеквизиты Цикл
			Если Элементы.Найти(ИмяТаблицы + Реквизит.Имя) = Неопределено Тогда
				__РаботаСФормами.СоздатьКолонкаТаблицыФормы(
					ЭтотОбъект,
					ИмяТаблицы + Реквизит.Имя,
					Элементы.СтрокиТаблицыЗначений,
					,
					,
					ИмяТаблицы + "." + Реквизит.Имя);
			КонецЕсли;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	Если ПоказатьТаблицу Тогда
		ОбновитьТаблицуСтрок();
	КонецЕсли;
	ОбновитьЗаголовокКнопки();
	Элементы.КолонкиТаблицыЗначений.Видимость = Не ПоказатьТаблицу;
	Элементы.СтрокиТаблицыЗначений.Видимость = ПоказатьТаблицу;
	ПоказатьТаблицу = Не ПоказатьТаблицу;
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокКнопки()
	Элементы.ФормаПоказатьКолонкиСтроки.Заголовок = ?(ПоказатьТаблицу, "Показать колонки", "Показать строки");
КонецПроцедуры

#КонецОбласти
