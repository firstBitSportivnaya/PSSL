#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт

	ЮТТесты
		.ДобавитьТестовыйНабор("Тесты функции ОписаниеТипаЧисло")
			.ДобавитьТест("ТестДолженСоздатьТипЧисло")
			.ДобавитьТест("ТестДолженВернутьОписаниеЧислаСКорректнымЗнаком")
			.ДобавитьТест("ТестДолженУстановитьЗнакЛюбойПриОтсутствииЯвнойУказки")
			.ДобавитьТест("ТестДолженПроверитьПолучениеЗначенияСКешем");
	ЮТТесты
		.ДобавитьТестовыйНабор("Тесты функции ПолучитьПредопределенноеЗначение")
			.ДобавитьТест("ТестДолженПроверитьПолучениеЗначенияСКешем");

КонецПроцедуры

#КонецОбласти


#Область Тесты

Процедура ТестДолженПроверитьПолучениеЗначенияСКешем() Экспорт
	
	Результат = __ОбщегоНазначенияСервер.ПолучитьПредопределенноеЗначение("КолДнейХраненияИсторииИнтеграции", Истина);
	
	ЮТест.ОжидаетЧто(Результат).Равно(0);

КонецПроцедуры




Процедура ТестДолженСоздатьТипЧисло() Экспорт
	
	Описание = __ОбщегоНазначенияСервер.ОписаниеТипаЧисло(10, 2, ДопустимыйЗнак.Неотрицательный);
	ЮТест.ОжидаетЧто(Тип(Описание)).Равно(Тип("Число"));

КонецПроцедуры

Процедура ТестДолженВернутьОписаниеЧислаСКорректнымЗнаком() Экспорт
	
	Описание = __ОбщегоНазначенияСервер.ОписаниеТипаЧисло(10, 2, ДопустимыйЗнак.Неотрицательный);
	Проверка = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10, 2, ДопустимыйЗнак.Неотрицательный));

	ЮТест.ОжидаетЧто(Проверка).Равно(Проверка);

КонецПроцедуры

Процедура ТестДолженУстановитьЗнакЛюбойПриОтсутствииЯвнойУказки() Экспорт

	Описание = __ОбщегоНазначенияСервер.ОписаниеТипаЧисло(10, 2);
	Проверка = __ОбщегоНазначенияСервер.ОписаниеТипаЧисло(10, 2, ДопустимыйЗнак.Любой);

	ЮТест.ОжидаетЧто(Описание).Равно(Проверка);

КонецПроцедуры

#КонецОбласти

