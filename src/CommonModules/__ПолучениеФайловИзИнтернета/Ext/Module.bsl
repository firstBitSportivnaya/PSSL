// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8,
// включая доработку типовых конфигураций.
//
// Copyright 2017-2024 First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
// e-mail: ivssmirnov@1bit.com
// Версия: 1.0.0.1
//
// Требования: платформа 1С версии 8.3.17 и выше

#Область ПрограммныйИнтерфейс

// Аналог метода БСП. Возвращает объект ИнтернетПрокси для доступа в Интернет.
// Допустимые протоколы для создания ИнтернетПрокси http, https, ftp и ftps.
//
// Параметры:
//    URLИлиПротокол - Строка - url в формате [Протокол://]<Сервер>/<Путь к файлу на сервере>,
//                              либо идентификатор протокола (http, ftp, ...).
//
// Возвращаемое значение:
//    ИнтернетПрокси - описывает параметры прокси-серверов для различных протоколов.
//                     Если не удалось распознать схему сетевой протокол,
//                     то будет создать прокси на основании протокола HTTP.
//
Функция ПолучитьПрокси(Знач URLИлиПротокол) Экспорт
	
	НастройкиПрокси = __ОбщегоНазначенияСлужебный.ХранилищеОбщихНастроекЗагрузить("НастройкаПроксиСервера", "");
	Возврат НовыйИнтернетПрокси(НастройкиПрокси, URLИлиПротокол);
	
КонецФункции

// Аналог метода БСП. Возвращает прокси по настройкам НастройкаПроксиСервера для заданного протокола Протокол.
//
// Параметры:
//   НастройкаПроксиСервера - Соответствие из КлючИЗначение:
//    * Ключ - Строка - см. ниже список возможных ключей.
//    * Значение - Произвольный
//    ИспользоватьПрокси - Булево - использовать ли прокси-сервер.
//    НеИспользоватьПроксиДляЛокальныхАдресов - использовать ли прокси-сервер для локальных адресов.
//    НеИспользоватьПроксиДляАдресов - Массив из Строка
//    ИспользоватьСистемныеНастройки - Булево - использовать ли системные настройки прокси-сервера.
//    Сервер       - Строка - адрес прокси-сервера.
//    Порт         - Строка - порт прокси-сервера.
//    Пользователь - Строка - имя пользователя для авторизации на прокси-сервере.
//    Пароль       - Строка - пароль пользователя.
//    ИспользоватьАутентификациюОС - Булево - признак использования аутентификации средствами операционной системы.
//   URLИлиПротокол - Строка - адрес ресурса или протокол, для которого устанавливаются параметры прокси сервера,
//                             например "https://1c.ru", "http", "https", "ftp", "ftps".
//
// Возвращаемое значение:
//   ИнтернетПрокси
//
Функция НовыйИнтернетПрокси(НастройкаПроксиСервера, URLИлиПротокол) Экспорт
	
	Если НастройкаПроксиСервера = Неопределено Тогда
		// Системные установки прокси-сервера.
		Возврат Неопределено;
	КонецЕсли;
	
	ИспользоватьПрокси = НастройкаПроксиСервера.Получить("ИспользоватьПрокси");
	Если Не ИспользоватьПрокси Тогда
		// Не использовать прокси-сервер.
		Возврат Новый ИнтернетПрокси(Ложь);
	КонецЕсли;
	
	ИспользоватьСистемныеНастройки = НастройкаПроксиСервера.Получить("ИспользоватьСистемныеНастройки");
	Если ИспользоватьСистемныеНастройки Тогда
		// Системные настройки прокси-сервера.
		Возврат Новый ИнтернетПрокси(Истина);
	КонецЕсли;
	
	ИспользоватьАутентификациюОС = НастройкаПроксиСервера.Получить("ИспользоватьАутентификациюОС");
	ИспользоватьАутентификациюОС = ?(ИспользоватьАутентификациюОС = Истина, Истина, Ложь);

	ДополнительныеНастройки = НастройкаПроксиСервера.Получить("ДополнительныеНастройкиПрокси");
	Если ТипЗнч(ДополнительныеНастройки) <> Тип("Соответствие") Тогда
		ДополнительныеНастройки = Новый Соответствие;
	КонецЕсли;
	
	// Настройки прокси-сервера, заданные вручную.
	Прокси = Новый ИнтернетПрокси;
	
	Протоколы = СтрРазделить("http,https,ftp,ftps", ",", Ложь);
	Для Каждого Протокол Из Протоколы Цикл
		АдресСервера = НастройкаПроксиСервера["Сервер"];
		Порт = НастройкаПроксиСервера["Порт"];
		
		ПроксиПоПротоколу = ДополнительныеНастройки[Протокол];
		Если ТипЗнч(ПроксиПоПротоколу) = Тип("Структура") Тогда
			АдресСервера = ПроксиПоПротоколу.Адрес;
			Порт = ПроксиПоПротоколу.Порт;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Порт) Тогда
			Порт = Неопределено;
		КонецЕсли;
		
		Прокси.Установить(Протокол, АдресСервера, Порт, 
			НастройкаПроксиСервера["Пользователь"], НастройкаПроксиСервера["Пароль"], ИспользоватьАутентификациюОС);
	КонецЦикла;
	
	Прокси.НеИспользоватьПроксиДляЛокальныхАдресов = НастройкаПроксиСервера["НеИспользоватьПроксиДляЛокальныхАдресов"];
	
	АдресаИсключений = НастройкаПроксиСервера.Получить("НеИспользоватьПроксиДляАдресов");
	Если ТипЗнч(АдресаИсключений) = Тип("Массив") Тогда
		Для каждого АдресИсключения Из АдресаИсключений Цикл
			Прокси.НеИспользоватьПроксиДляАдресов.Добавить(АдресИсключения);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Прокси;
	
КонецФункции

#КонецОбласти
