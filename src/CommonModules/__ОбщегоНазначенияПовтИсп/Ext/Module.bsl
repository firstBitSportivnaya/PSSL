// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8, включая доработку типовых конфигураций.
//
// Copyright 2017-2024 First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
// e-mail: ivssmirnov@1bit.com
// Версия: 1.0.0.1
//
// Требования: платформа 1С версии 8.3.17 и выше

////////////////////////////////////////////////////////////////////////////////
// Общего назначения (сервер): для серверных функций общего назначения
// с повторным использованием

#Область ПрограммныйИнтерфейс

// Возвращает значение предопределенного элемента ПВХ по имени.
//
// Параметры:
//  Имя - Строка - Имя переменной ПВХ.
// 
// Возвращаемое значение:
//  - ПроизвольныйТип - Значение переменной ПВХ.
//  - Массив - Массив значений переменной ПВХ.
// 
Функция ПолучитьПредопределенноеЗначение(Имя) Экспорт
	
	Возврат ПланыВидовХарактеристик.__ПредопределенныеЗначения.ПолучитьЗначение(Имя);
	
КонецФункции

// Возвращает соответствие предопределенных элементов ПВХ по имени.
//
// Параметры:
//  Имя - Строка - Имена переменных ПВХ, перечисленные через запятую.
//  ВРазрезеКлючей - Булево - Признак получения данных в виде соответствия, где Ключ - Имя переменной.
// 
// Возвращаемое значение:
//  - Соответствие - Соответствие имен и значений переменных ПВХ.
//  - Массив - Массив значений переменных ПВХ.
//
Функция ПолучитьПредопределенныеЗначения(Имена, ВРазрезеКлючей = Ложь) Экспорт
	
	Возврат ПланыВидовХарактеристик.__ПредопределенныеЗначения.ПолучитьЗначения(Имена, ВРазрезеКлючей);
	
КонецФункции

// Возвращает таблицу соответствий по отбору.
//
// Параметры:
//  ТипСоответствия - Перечисление.__ТипСоответствияОбъектовИБ - Тип соответствия.
//  Объект1 - ПроизвольныйТип - Объект1.
//  Объект2 - ПроизвольныйТип - Объект2.
//  Объект3 - ПроизвольныйТип - Объект3.
// 
// Возвращаемое значение:
//  - ТаблицаЗначений - Таблица соответствий по отбору.
// 
Функция ПолучитьСоответствиеОбъектовИБ(ТипСоответствия, Объект1 = Неопределено, Объект2 = Неопределено, Объект3 = Неопределено) Экспорт
	
	Возврат РегистрыСведений.__СоответствияОбъектовИБ.ПолучитьСоответствиеОбъектовИБ(ТипСоответствия, Объект1, Объект2, Объект3);
	
КонецФункции

// Возвращает массив значений произвольного типа, объекта соответствия.
//
// Параметры:
//  ТипСоответствия	 - СправочникСсылка.__ТипСоответствияОбъектовИБ - Тип соответствия.
//  ИмяКлюча		 - Строка - поле регистра сведений __СоответствияОбъектовИБ, по которому устанавливается отбор. 
//  ЗначениеКлюча	 - ПроизвольныйТип - Значение ключа по которому установлен отбор.
//  ИмяОбъекта		 - Строка - получаемое поле регистра сведений __СоответствияОбъектовИБ. 
// 
// Возвращаемое значение:
//   - Массив - Значения объекта из регистра сведений __СоответствияОбъектовИБ, 
//				если соответствие одно в массив будет один элемент 
//
Функция ПолучитьЗначенияОбъектаСоответствияПоКлючу(ТипСоответствия, ИмяКлюча, ЗначениеКлюча, ИмяОбъекта) Экспорт
	
	Возврат РегистрыСведений.__СоответствияОбъектовИБ.ПолучитьЗначенияОбъектаСоответствияПоКлючу(
			ТипСоответствия, 
			ИмяКлюча, 
			ЗначениеКлюча, 
			ИмяОбъекта);
	
КонецФункции

// См. __ОбщегоНазначенияСервер.СуществуетБиблиотекаСтандартныхПодсистем.
Функция СуществуетБиблиотекаСтандартныхПодсистем() Экспорт
	
	Возврат __ОбщегоНазначенияСервер.СуществуетБиблиотекаСтандартныхПодсистем();
	
КонецФункции

// См. __ОбщегоНазначенияСервер.ПолучитьОбщийМодуль.
Функция ОбщийМодуль(ИмяМодуляБСП, ИмяМодуляВстроенного) Экспорт

	Возврат __ОбщегоНазначенияСервер.ОбщийМодуль(ИмяМодуляБСП, ИмяМодуляВстроенного);
	
КонецФункции

#Область ПодпискиНаСобытияДокументов

// Определяет соответствие типа источника подписки и имени метода.
//
// Возвращаемое значение:
//   Соответствие - в качестве ключа передается тип объекта источника подписки,
// 					а в качестве значения имя исполняемого метода.
//
// Пример:
// Соответствие.Вставить(Тип("ДокументОбъект.АвансовыйОтчет"), "АвансовыйОтчетПередЗаписью");
//
Функция ДокументыПередЗаписью() Экспорт
	
	Соответствие = Новый Соответствие;
	
	Возврат Соответствие;
	
КонецФункции

// Определяет соответствие типа источника подписки и имени метода.
//
// Возвращаемое значение:
//   Соответствие - в качестве ключа передается тип объекта источника подписки,
// 					а в качестве значения имя исполняемого метода.
//
// Пример:
// Соответствие.Вставить(Тип("ДокументОбъект.АвансовыйОтчет"), "АвансовыйОтчетПриЗаписи");
//
Функция ДокументыПриЗаписи() Экспорт
	
	Соответствие = Новый Соответствие;
	
	Возврат Соответствие;
	
КонецФункции

// Определяет соответствие типа источника подписки и имени метода.
//
// Возвращаемое значение:
//   Соответствие - в качестве ключа передается тип объекта источника подписки,
// 					а в качестве значения имя исполняемого метода.
//
// Пример:
// Соответствие.Вставить(Тип("ДокументОбъект.АвансовыйОтчет"), "АвансовыйОтчетОбработкаПроведения");
//
Функция ДокументыОбработкаПроведения() Экспорт
	
	Соответствие = Новый Соответствие;
	
	Возврат Соответствие;
	
КонецФункции

// Определяет соответствие типа источника подписки и имени метода.
//
// Возвращаемое значение:
//   Соответствие - в качестве ключа передается тип объекта источника подписки,
// 					а в качестве значения имя исполняемого метода.
//
// Пример:
// Соответствие.Вставить(Тип("ДокументОбъект.АвансовыйОтчет"), "АвансовыйОтчетОбработкаЗаполнения");
//
Функция ДокументыОбработкаЗаполнения() Экспорт
	
	Соответствие = Новый Соответствие;
	
	Возврат Соответствие;
	
КонецФункции

// Определяет соответствие типа источника подписки и имени метода.
//
// Возвращаемое значение:
//   Соответствие - в качестве ключа передается тип объекта источника подписки,
// 					а в качестве значения имя исполняемого метода.
//
// Пример:
// Соответствие.Вставить(Тип("ДокументОбъект.АвансовыйОтчет"), "АвансовыйОтчетПриКопировании");
//
Функция ДокументыПриКопировании() Экспорт
	
	Соответствие = Новый Соответствие;
	
	Возврат Соответствие;
	
КонецФункции

#КонецОбласти // ПодпискиНаСобытияДокументов

#Область ПодпискиНаСобытияСправочников

// Определяет соответствие типа источника подписки и имени метода.
//
// Возвращаемое значение:
//   Соответствие - в качестве ключа передается тип объекта источника подписки,
// 					а в качестве значения имя исполняемого метода.
//
// Пример:
// Соответствие.Вставить(Тип("СправочникОбъект.Номенеклатура"), "НоменеклатураПередЗаписью");
//
Функция СправочникиПередЗаписью() Экспорт
	
	Соответствие = Новый Соответствие;
	
	Возврат Соответствие;
	
КонецФункции

// Определяет соответствие типа источника подписки и имени метода.
//
// Возвращаемое значение:
//   Соответствие - в качестве ключа передается тип объекта источника подписки,
// 					а в качестве значения имя исполняемого метода.
//
// Пример:
// Соответствие.Вставить(Тип("СправочникОбъект.Номенеклатура"), "НоменеклатураПриЗаписи");
//
Функция СправочникиПриЗаписи() Экспорт
	
	Соответствие = Новый Соответствие;
	
	Возврат Соответствие;
	
КонецФункции

// Определяет соответствие типа источника подписки и имени метода.
//
// Возвращаемое значение:
//   Соответствие - в качестве ключа передается тип объекта источника подписки,
// 					а в качестве значения имя исполняемого метода.
//
// Пример:
// Соответствие.Вставить(Тип("СправочникОбъект.Номенеклатура"), "НоменеклатураОбработкаЗаполнения");
//
Функция СправочникиОбработкаЗаполнения() Экспорт
	
	Соответствие = Новый Соответствие;
	
	Возврат Соответствие;
	
КонецФункции

// Определяет соответствие типа источника подписки и имени метода.
//
// Возвращаемое значение:
//   Соответствие - в качестве ключа передается тип объекта источника подписки,
// 					а в качестве значения имя исполняемого метода.
//
// Пример:
// Соответствие.Вставить(Тип("СправочникОбъект.Номенеклатура"), "НоменеклатураПриКопировании");
//
Функция СправочникиПриКопировании() Экспорт
	
	Соответствие = Новый Соответствие;
	
	Возврат Соответствие;
	
КонецФункции

#КонецОбласти // ПодпискиНаСобытияСправочников

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

#КонецОбласти // СлужебныеПроцедурыИФункции