// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8, включая доработку типовых конфигураций.
//
// Copyright 2017-2024 First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
// e-mail: ivssmirnov@1bit.com
// Версия: 1.0.0.1
//
// Требования: платформа 1С версии 8.3.17 и выше

#Область ПрограммныйИнтерфейс

Процедура ИнициализироватьПредопределенныеЗначения() Экспорт
	
	ТЗПредопределенныхЗначений = __ПредопределенныеЗначенияПереопределяемый.ПредопределенныеЗначения();
	
	ТЗПредопределенныхЗначенийКСозданию = ПредопределенныеЗначенияКСозданию(ТЗПредопределенныхЗначений);
	
	Для Каждого СтрокаТаблицы Из ТЗПредопределенныхЗначенийКСозданию Цикл
	
		СоздатьПредопределенноеЗначение(СтрокаТаблицы, ПланыВидовХарактеристик.__ПредопределенныеЗначения);
		
	КонецЦикла;
	
КонецПроцедуры

// Функция - Значения предопределенных элементов по идентификаторам, работает в режиме одиночного и множественного выбора
//
// Параметры:
//  СписокИдентификаторов	 - Строка - для одиночного выбора
//							 - Массив - для множественного выбора 
//  ПутьПоиска				 - Строка - таблица из которой получаем значения по идентификатору
//  МножественныйВыбор		 - Булево - Ложь - вернется одно значение произвольного типа, 
//									    Истина - вернется массив или соответствие в разрезе ключей со значениями
//  ВРазрезеКлючей			 - Булево - Ложь - вернется массив значений без учета идентификаторов, 
//									    Истина - вернется соответствие со значениями в разрезе ключей 
// 
// Возвращаемое значение:
//  Массив - содержит значения предопределенных элементов
//  Соответствие из КлючИЗначение - список идентификаторов и значений элементов:
//   * Ключ - Строка - ИдентификаторНастройки;
//   * Значение - Произвольный - значение элемента
//
Функция ЗначенияПредопределенныхЭлементов(СписокИдентификаторов, ПутьПоиска = "ПланВидовХарактеристик.__ПредопределенныеЗначения", МножественныйВыбор = Ложь, ВРазрезеКлючей = Ложь) Экспорт
	
	Если МножественныйВыбор Тогда
		Если ВРазрезеКлючей Тогда
			Значения = Новый Соответствие;
		Иначе
			Значения = Новый Массив;
		КонецЕсли;
	Иначе
		Значения = Неопределено;
	КонецЕсли;
	
	ДанныеПредЗнач = ПолучитьДанныеПредопределенныхЗначений(СписокИдентификаторов, ПутьПоиска, МножественныйВыбор);
	ВыборкаСписок = ДанныеПредЗнач.ВыборкаСписок;
	ВыборкаЗначения = ДанныеПредЗнач.ВыборкаЗначения;
	
	// список значений
	Пока ВыборкаСписок.Следующий() Цикл
		ВыборкаДетальныеЗаписи = ВыборкаСписок.Выбрать();
		Значение = Новый Массив;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Значение.Добавить(ВыборкаДетальныеЗаписи.Значение);
		КонецЦикла;
		Если МножественныйВыбор Тогда
			ДополнитьЗначенияПредопределенных(Значения, Значение, ВыборкаСписок.Идентификатор);
		Иначе
			Значения = Значение;
		КонецЕсли;
	КонецЦикла;
	
	// значение и пароль
	Пока ВыборкаЗначения.Следующий() Цикл
		Если ВыборкаЗначения.Пароль Тогда
			УИД = ВыборкаЗначения.Ссылка.УникальныйИдентификатор();
			Значение = ПолучитьПарольПоИдентификатору(УИД);
		Иначе
			Значение = ВыборкаЗначения.Значение;
		КонецЕсли;
		Если МножественныйВыбор Тогда
			ДополнитьЗначенияПредопределенных(Значения, Значение, ВыборкаЗначения.Идентификатор);
		Иначе
			Значения = Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Значения;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПредопределенныеЗначенияКСозданию(ТЗПредопределенныхЗначений, ПутьПоиска = "ПланВидовХарактеристик.__ПредопределенныеЗначения") Экспорт

	ИдентификаторыНастроек = ТЗПредопределенныхЗначений.ВыгрузитьКолонку("ИдентификаторНастройки");
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	__ПредопределенныеЗначения.ИдентификаторНастройки КАК ИдентификаторНастройки
		|ИЗ
		|	%1 КАК __ПредопределенныеЗначения
		|ГДЕ
		|	__ПредопределенныеЗначения.ИдентификаторНастройки В (&СписокИдентификаторов)";
		
	Запрос.Текст = СтрШаблон(ТекстЗапроса, ПутьПоиска);
	
	Запрос.УстановитьПараметр("СписокИдентификаторов", ИдентификаторыНастроек);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СтрокиДляУдаления = Новый Массив;
	Для Каждого Строка Из ТЗПредопределенныхЗначений Цикл
		ВыборкаДетальныеЗаписи.Сбросить();
		Если ВыборкаДетальныеЗаписи.НайтиСледующий(Строка.ИдентификаторНастройки, "ИдентификаторНастройки") Тогда
			СтрокиДляУдаления.Добавить(Строка);		
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из СтрокиДляУдаления Цикл
		ТЗПредопределенныхЗначений.Удалить(Строка);	
	КонецЦикла;
	
	Возврат ТЗПредопределенныхЗначений;
	
КонецФункции

Процедура СоздатьПредопределенноеЗначение(СтрокаТаблицы, МенеджерОбъекта) Экспорт
	
	// ++ Обход ошибки отстутствия модуля БСП, не переносить
	ОбщегоНазначения = Неопределено;
	// -- Обход ошибки отстутствия модуля БСП, не переносить
	
	НовыйПредопределенныйЭлемент = МенеджерОбъекта.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НовыйПредопределенныйЭлемент, СтрокаТаблицы);
	// инициализация значения по умолчанию
	НовыйПредопределенныйЭлемент.Значение = СтрокаТаблицы.ТипЗначения.ПривестиЗначение();
	
	Попытка;
		НовыйПредопределенныйЭлемент.Записать();
	Исключение;
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Функция ПолучитьДанныеПредопределенныхЗначений(Идентификаторы, ПутьПоиска, МножественныйВыбор = Ложь)
	
	ДанныеПредЗнач = Новый Структура;
	
	ТекстЗапроса =	
		"ВЫБРАТЬ
		|	__ПредопределенныеЗначения.Ссылка КАК Ссылка,
		|	__ПредопределенныеЗначения.СписокЗначений КАК СписокЗначений,
		|	__ПредопределенныеЗначения.Пароль КАК Пароль,
		|	__ПредопределенныеЗначения.Значение КАК Значение,
		|	__ПредопределенныеЗначения.ИдентификаторНастройки КАК Идентификатор
		|ПОМЕСТИТЬ Предопределенные
		|ИЗ
		|	%1 КАК __ПредопределенныеЗначения
		|ГДЕ
		|	__ПредопределенныеЗначения.ИдентификаторНастройки В(&Идентификаторы)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредопределенныеЗначения.Ссылка КАК Ссылка,
		|	ПредопределенныеЗначения.СписокЗначений КАК СписокЗначений,
		|	ПредопределенныеЗначения.Пароль КАК Пароль,
		|	ВЫБОР
		|		КОГДА ПредопределенныеЗначения.СписокЗначений
		|			ТОГДА __ПредопределенныеЗначенияЗначенияЭлементов.Значение
		|		КОГДА НЕ ПредопределенныеЗначения.Пароль
		|			ТОГДА ПредопределенныеЗначения.Значение
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК Значение,
		|	ПредопределенныеЗначения.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ ЗначенияПредопределенных
		|ИЗ
		|	Предопределенные КАК ПредопределенныеЗначения
		|		ЛЕВОЕ СОЕДИНЕНИЕ %1.ЗначенияЭлементов КАК __ПредопределенныеЗначенияЗначенияЭлементов
		|		ПО ПредопределенныеЗначения.Ссылка = __ПредопределенныеЗначенияЗначенияЭлементов.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияПредопределенных.Значение КАК Значение,
		|	ЗначенияПредопределенных.Идентификатор КАК Идентификатор
		|ИЗ
		|	ЗначенияПредопределенных КАК ЗначенияПредопределенных
		|ГДЕ
		|	ЗначенияПредопределенных.СписокЗначений
		|ИТОГИ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияПредопределенных.Ссылка КАК Ссылка,
		|	ЗначенияПредопределенных.Пароль КАК Пароль,
		|	ЗначенияПредопределенных.Значение КАК Значение,
		|	ЗначенияПредопределенных.Идентификатор КАК Идентификатор
		|ИЗ
		|	ЗначенияПредопределенных КАК ЗначенияПредопределенных
		|ГДЕ
		|	НЕ ЗначенияПредопределенных.СписокЗначений";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ПутьПоиска);
	Если Не МножественныйВыбор Тогда
		Схема = Новый СхемаЗапроса;
		Схема.УстановитьТекстЗапроса(ТекстЗапроса);
		ОператорВыбрать = Схема.ПакетЗапросов[0].Операторы[0];
		ВыражениеОтбора = 
			Новый ВыражениеСхемыЗапроса("__ПредопределенныеЗначения.ИдентификаторНастройки = &Идентификаторы");
			
		ОператорВыбрать.КоличествоПолучаемыхЗаписей = 1;
		ОператорВыбрать.Отбор.Установить(0, ВыражениеОтбора);
		ТекстЗапроса = Схема.ПолучитьТекстЗапроса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Идентификаторы", Идентификаторы);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ДанныеПредЗнач.Вставить("ВыборкаСписок", РезультатыЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам));
	ДанныеПредЗнач.Вставить("ВыборкаЗначения", РезультатыЗапроса[3].Выбрать());
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ДанныеПредЗнач;
		
КонецФункции

Процедура ДополнитьЗначенияПредопределенных(Приемник, Значение, Идентификатор = "")

	// ++ Обход ошибки отстутствия модуля БСП, не переносить
	ОбщегоНазначенияКлиентСервер = __ВспомогательныйМодульНеПереноситьКлиентСервер;
	// -- Обход ошибки отстутствия модуля БСП, не переносить
	
	Если ТипЗнч(Приемник) = Тип("Соответствие") Тогда
		Приемник.Вставить(Идентификатор, Значение);
	Иначе
		Если ТипЗнч(Значение) = Тип("Массив") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Приемник, Значение);
		Иначе
			Приемник.Добавить(Значение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПарольПоИдентификатору(УИД)
	
	// ++ Обход ошибки отстутствия модуля БСП, не переносить
	ОбщегоНазначения = __ВспомогательныйМодульНеПереносить;
	ОбщегоНазначенияКлиентСервер = __ВспомогательныйМодульНеПереноситьКлиентСервер;
	// -- Обход ошибки отстутствия модуля БСП, не переносить
	
	ДанныеХранилища = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Строка(УИД));
	
	Значение = "";
	Если ТипЗнч(ДанныеХранилища) = Тип("Структура") Тогда
		Значение = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеХранилища, "bit_password", "");
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

#КонецОбласти