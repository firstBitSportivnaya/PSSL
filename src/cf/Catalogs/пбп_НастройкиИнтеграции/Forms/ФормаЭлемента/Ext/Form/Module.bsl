// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8,
// включая доработку типовых конфигураций.
//
// Copyright First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
//

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьСвойстваЭлементов();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	СтруктураНастроек = пбп_ОбщегоНазначенияСлужебный.ПрочитатьДанныеИзБезопасногоХранилища(Объект.Ссылка);
	
	Если СтруктураНастроек = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого КлючИЗначение Из СтруктураНастроек Цикл
		НоваяСтрока = СписокНастроек.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, КлючИЗначение.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДанныеКомпоненты = ТекущийОбъект.ВнешняяКомпонента.Получить();
	Если Не ДанныеКомпоненты = Неопределено Тогда
		АдресВнешнейКомпоненты = ПоместитьВоВременноеХранилище(ДанныеКомпоненты, Новый УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ВнешняяКомпонентаЗагруженаИзФайла Тогда
		ДвоичныеДанныеКомпоненты = ПолучитьИзВременногоХранилища(АдресВнешнейКомпоненты);
		ТекущийОбъект.ВнешняяКомпонента = Новый ХранилищеЗначения(ДвоичныеДанныеКомпоненты, Новый СжатиеДанных());
	КонецЕсли;
	
	Если Модифицированность И Не ПустаяСтрока(Объект.ИдентификаторНастройки) Тогда
		ТекущийОбъект.ИзмененВручную = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СтруктураНастроек = Новый Структура();
	
	Для Каждого ТекСтрока Из СписокНастроек Цикл
		
		Если Не ЗначениеЗаполнено(ТекСтрока.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		Настройка = Новый Структура("ИмяНастройки, Значение");
		ЗаполнитьЗначенияСвойств(Настройка, ТекСтрока);
		СтруктураНастроек.Вставить(ТекСтрока.ИмяНастройки, Настройка);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Истина);
	пбп_ОбщегоНазначенияСлужебный.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, СтруктураНастроек);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипИнтеграцииПриИзменении(Элемент)
	
	УстановитьСвойстваЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПодключенияНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗаголовокДиалога = НСтр("ru = 'Укажите каталог'");
	
	РежимОткрытияДиалога = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытия = Новый ДиалогВыбораФайла(РежимОткрытияДиалога);
	ДиалогОткрытия.Каталог = Объект.СтрокаПодключения;
	ДиалогОткрытия.Заголовок = ЗаголовокДиалога;
	
	Оповещение = Новый ОписаниеОповещения("ОбработчикВыбораФайловогоКаталогаЗавершениеПослеВыбораВДиалоге", ЭтотОбъект);
	
	ДиалогОткрытия.Показать(Оповещение);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьОбщие(Команда)
	
	ОбщиеЗначения = ПолучитьОбщиеЗначения();
	
	Если СписокНастроек.Количество() Тогда
		ПроизвестиПроверкуСуществованияРеквизитов(ОбщиеЗначения);
	КонецЕсли;
	
	Для Каждого ТекЭлемент Из ОбщиеЗначения Цикл
		
		НоваяСтрока = СписокНастроек.Добавить();
		НоваяСтрока.ИмяНастройки = ТекЭлемент;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЗначения(Команда)
	
	Пометка = НЕ Элементы.СписокНастроекПоказатьЗначения.Пометка;
	Элементы.СписокНастроекПоказатьЗначения.Пометка = Пометка;
	Элементы.СписокНастроекЗначениеПредставление.Видимость = Пометка;
	Элементы.СписокНастроекЗначение.Видимость = НЕ Пометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьВнешнююКомпонентуИзФайла(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("НастройкаИнтеграции", Объект.Ссылка);
	ПараметрыОткрытия.Вставить("АдресВнешнейКомпоненты", АдресВнешнейКомпоненты);
	ПараметрыОткрытия.Вставить("ИмяФайла", Объект.ИмяФайлаВнешнейКомпоненты);
	
	Оповещение = Новый ОписаниеОповещения(
		"ОбработчикПодключенияВнешнейКомпонентыЗавершениеПослеВыбораКомпоненты", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.пбп_НастройкиИнтеграции.Форма.ФормаЗагрузкиВнешнейКомпоненты",
		ПараметрыОткрытия, ЭтотОбъект, Новый УникальныйИдентификатор, , , Оповещение);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСвойстваЭлементов()
	
	Элементы.СтрокаПодключения.КнопкаВыбора = Ложь;
	
	ГруппаОсновныеНастройки				= "ГруппаОсновныеНастройки";
	СтрокаПодключения					= "СтрокаПодключения";
	Порт								= "Порт";
	УчетнаяЗапись						= "УчетнаяЗапись";
	ТипАвторизации						= "ТипАвторизации";
	ИмяCOMОбъекта						= "ИмяCOMОбъекта";
	ИспользоватьПользовательскиеФункции	= "ИспользоватьПользовательскиеФункции";
	СписокНастроекСтрока				= "СписокНастроек";
	ПодключитьВнешнююКомпоненту			= "ПодключитьВнешнююКомпоненту";
	
	СерверСтрока = НСтр("ru = 'Сервер'");
	
	УстанавливаемоеСвойство = "Видимость";
	
	Если Не ЗначениеЗаполнено(Объект.ТипИнтеграции) Тогда
		Элементы.СтрокаПодключения.Заголовок = НСтр("ru = 'Каталог'");
		
		пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ГруппаОсновныеНастройки, УстанавливаемоеСвойство, Ложь);
		пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, УчетнаяЗапись, УстанавливаемоеСвойство, Ложь);
		пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ТипАвторизации, УстанавливаемоеСвойство, Ложь);
		пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ИмяCOMОбъекта, УстанавливаемоеСвойство, Ложь);
		пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ИспользоватьПользовательскиеФункции, УстанавливаемоеСвойство, Ложь);
		пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, СписокНастроекСтрока, УстанавливаемоеСвойство, Ложь);
		пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ПодключитьВнешнююКомпоненту, УстанавливаемоеСвойство, Ложь);
	Иначе
		пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ГруппаОсновныеНастройки, УстанавливаемоеСвойство, Истина);
			
		ЭлементНаследования = Справочники.пбп_ТипыИнтеграций
			.ПолучитьПредопределенныйЭлементНаследованияНастроекТипаИнтеграции(Объект.ТипИнтеграции);
		Если ЭлементНаследования = Справочники.пбп_ТипыИнтеграций.Каталог Тогда
			Элементы.СтрокаПодключения.Заголовок = НСтр("ru = 'Каталог'");
			
			Элементы.СтрокаПодключения.КнопкаВыбора = Истина;
			
			УстановитьВидимостьЭлементовДляТипаФайловыеОбмены();
			
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СтрокаПодключения, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, Порт, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, УчетнаяЗапись, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СписокНастроекСтрока, УстанавливаемоеСвойство, Ложь);
		ИначеЕсли ЭлементНаследования = Справочники.пбп_ТипыИнтеграций.FTPРесурсы Тогда
			Элементы.СтрокаПодключения.Заголовок = НСтр("ru = 'Путь к каталогу'");
			
			УстановитьВидимостьЭлементовДляТипаФайловыеОбмены();
			
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СтрокаПодключения, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, Порт, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, УчетнаяЗапись, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СписокНастроекСтрока, УстанавливаемоеСвойство, Истина);
		ИначеЕсли ЭлементНаследования = Справочники.пбп_ТипыИнтеграций.ПочтовыйКлиент Тогда
			УстановитьВидимостьЭлементовДляТипаФайловыеОбмены();
			
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СтрокаПодключения, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, Порт, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, УчетнаяЗапись, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СписокНастроекСтрока, УстанавливаемоеСвойство, Ложь);
		ИначеЕсли ЭлементНаследования = Справочники.пбп_ТипыИнтеграций.COM Тогда
			Элементы.СтрокаПодключения.Заголовок = НСтр("ru = 'Строка подключения'");
			
			УстановитьВидимостьЭлементовДляОстальныхТипов();
			
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, Порт, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ТипАвторизации, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ИмяCOMОбъекта, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СписокНастроекСтрока, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ПодключитьВнешнююКомпоненту, УстанавливаемоеСвойство, Ложь);
		ИначеЕсли ЭлементНаследования = Справочники.пбп_ТипыИнтеграций.RESTAPI
			И ЭлементНаследования = Справочники.пбп_ТипыИнтеграций.SOAP Тогда
			Элементы.СтрокаПодключения.Заголовок = СерверСтрока;
			
			УстановитьВидимостьЭлементовДляОстальныхТипов();
			
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, Порт, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ТипАвторизации, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ИмяCOMОбъекта, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СписокНастроекСтрока, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ПодключитьВнешнююКомпоненту, УстанавливаемоеСвойство, Ложь);
		ИначеЕсли ЭлементНаследования = Справочники.пбп_ТипыИнтеграций.ВнешняяКомпонента Тогда
			Элементы.СтрокаПодключения.Заголовок = НСтр("ru = 'Имя компоненты'");
			
			УстановитьВидимостьЭлементовДляОстальныхТипов();
			
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, Порт, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ТипАвторизации, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ИмяCOMОбъекта, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СписокНастроекСтрока, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ПодключитьВнешнююКомпоненту, УстанавливаемоеСвойство, Истина);
		ИначеЕсли ЭлементНаследования = Справочники.пбп_ТипыИнтеграций.КоманднаяСтрока Тогда
			Элементы.СтрокаПодключения.Заголовок = НСтр("ru = 'Исполняемый файл'");
			
			УстановитьВидимостьЭлементовДляОстальныхТипов();
			
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, Порт, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ТипАвторизации, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ИмяCOMОбъекта, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СписокНастроекСтрока, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ПодключитьВнешнююКомпоненту, УстанавливаемоеСвойство, Ложь);
		ИначеЕсли ЭлементНаследования = Справочники.пбп_ТипыИнтеграций.БрокерыСообщений Тогда
			Элементы.СтрокаПодключения.Заголовок = СерверСтрока;
			
			УстановитьВидимостьЭлементовДляОстальныхТипов();
			
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, Порт, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ТипАвторизации, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ИмяCOMОбъекта, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СписокНастроекСтрока, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ПодключитьВнешнююКомпоненту, УстанавливаемоеСвойство, Истина);
		Иначе
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СтрокаПодключения, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ИспользоватьПользовательскиеФункции, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, УчетнаяЗапись, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, Порт, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ТипАвторизации, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ИмяCOMОбъекта, УстанавливаемоеСвойство, Ложь);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, СписокНастроекСтрока, УстанавливаемоеСвойство, Истина);
			пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы, ПодключитьВнешнююКомпоненту, УстанавливаемоеСвойство, Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовДляТипаФайловыеОбмены()
	
	УстанавливаемоеСвойство = "Видимость";
	
	пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ТипАвторизации", УстанавливаемоеСвойство, Ложь);
	пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ИмяCOMОбъекта", УстанавливаемоеСвойство, Ложь);
	пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ИспользоватьПользовательскиеФункции", УстанавливаемоеСвойство, Истина);
	пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "СписокНастроек", УстанавливаемоеСвойство, Ложь);
	пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ПодключитьВнешнююКомпоненту", УстанавливаемоеСвойство, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовДляОстальныхТипов()
	
	УстанавливаемоеСвойство = "Видимость";
	
	пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "СтрокаПодключения", УстанавливаемоеСвойство, Истина);
	пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ИспользоватьПользовательскиеФункции", УстанавливаемоеСвойство, Ложь);
	пбп_ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "УчетнаяЗапись", УстанавливаемоеСвойство, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыбораФайловогоКаталогаЗавершениеПослеВыбораВДиалоге(
	Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.СтрокаПодключения = Результат[0];
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПодключенияВнешнейКомпонентыЗавершениеПослеВыбораКомпоненты(
	Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.ИзмененВручную Тогда
		Объект.ИмяФайлаВнешнейКомпоненты = Результат.ИмяФайла;
		ВнешняяКомпонентаЗагруженаИзФайла = Истина;
		
		ОбработчикПодключенияВнешнейКомпонентыЗавершениеПослеВыбораКомпонентыНаСервере(Результат, ДополнительныеПараметры);
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработчикПодключенияВнешнейКомпонентыЗавершениеПослеВыбораКомпонентыНаСервере(
	Знач Результат, Знач ДополнительныеПараметры)
	
	АдресВнешнейКомпоненты = ПоместитьВоВременноеХранилище(Результат.ДвоичныеДанные, Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОбщиеЗначения()
	
	Массив = Новый Массив;
	Если Не ЗначениеЗаполнено(Объект.ТипАвторизации)
		Или Объект.ТипАвторизации = Перечисления.пбп_ТипыАвторизации.Базовая Тогда
		Массив.Добавить("Логин");
		Массив.Добавить("Пароль");
	Иначе
		Массив.Добавить("Токен");
	КонецЕсли;
	
	Возврат Массив;
	
КонецФункции

&НаКлиенте
Процедура ПроизвестиПроверкуСуществованияРеквизитов(ПроверяемыеЗначения)
	
	Сч = ПроверяемыеЗначения.Количество() - 1;
	
	Пока Сч >= 0 Цикл
		НайденныеСтроки = СписокНастроек.НайтиСтроки(Новый Структура("ИмяНастройки", ПроверяемыеЗначения[Сч]));
		Если НайденныеСтроки.Количество() Тогда
			ПроверяемыеЗначения.Удалить(Сч);
		КонецЕсли;
		Сч = Сч - 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции