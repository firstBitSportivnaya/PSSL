// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8,
// включая доработку типовых конфигураций.
//
// Copyright First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
//

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает значение ПВХ по идентификатору.
//
// Параметры:
//  Идентификатор - Строка - Идентификатор переменной ПВХ.
// 
// Возвращаемое значение:
//  ПроизвольныйТип - Значение переменной ПВХ.
// 
Функция ПолучитьЗначение(Идентификатор) Экспорт
	
	Значение = ЗначенияПредопределенныхЭлементов(Идентификатор);
	
	Возврат Значение;
	
КонецФункции

// Возвращает соответствие предопределенных элементов ПВХ по Идентификаторам.
//
// Параметры:
//  Идентификаторы - Строка - Идентификаторы переменных ПВХ, перечисленные через запятую.
//  ВРазрезеКлючей - Булево - Признак получения данных в виде соответствия, где Ключ - Имя переменной.
// 
// Возвращаемое значение:
//  - Соответствие - Соответствие имен и значений переменных ПВХ.
//  - Массив - Массив значений переменных ПВХ.
// 
Функция ПолучитьЗначения(Идентификаторы, ВРазрезеКлючей = Ложь) Экспорт
	
	Если ВРазрезеКлючей Тогда
		Значения = Новый Соответствие;
	Иначе
		Значения = Новый Массив;
	КонецЕсли;
	
	МассивИдентификаторов = пбп_СтроковыеФункцииСлужебныйКлиентСервер.РазложитьСтрокуВМассивПодстрок(Идентификаторы);
	МассивИдентификаторов = пбп_ОбщегоНазначенияСлужебныйКлиентСервер.СвернутьМассив(МассивИдентификаторов);
	
	Если Не ЗначениеЗаполнено(МассивИдентификаторов) Тогда
		Возврат Значения;
	КонецЕсли;
	
	Значения = ЗначенияПредопределенныхЭлементов(МассивИдентификаторов, , Истина, ВРазрезеКлючей);
	
	Если Не ВРазрезеКлючей Тогда
		Значения = пбп_ОбщегоНазначенияСлужебныйКлиентСервер.СвернутьМассив(Значения);
	КонецЕсли;
	
	Возврат Значения;
	
КонецФункции

// Функция - Значения предопределенных элементов по идентификаторам, работает в режиме одиночного и множественного выбора
//
// Параметры:
//  СписокИдентификаторов	 - Строка - для одиночного выбора
//							 - Массив - для множественного выбора
//  ПутьПоиска				 - Строка - таблица из которой получаем значения по идентификатору
//  МножественныйВыбор		 - Булево - Ложь - вернется одно значение произвольного типа,
//									    Истина - вернется массив или соответствие в разрезе ключей со значениями
//  ВРазрезеКлючей			 - Булево - Ложь - вернется массив значений без учета идентификаторов,
//									    Истина - вернется соответствие со значениями в разрезе ключей
//
// Возвращаемое значение:
//  Массив - содержит значения предопределенных элементов
//  Соответствие из КлючИЗначение - список идентификаторов и значений элементов:
//   * Ключ - Строка - ИдентификаторНастройки;
//   * Значение - Произвольный - значение элемента
//
Функция ЗначенияПредопределенныхЭлементов(СписокИдентификаторов, ПутьПоиска = "ПланВидовХарактеристик.пбп_ПредопределенныеЗначения", МножественныйВыбор = Ложь, ВРазрезеКлючей = Ложь) Экспорт
	
	Если МножественныйВыбор Тогда
		Если ВРазрезеКлючей Тогда
			Значения = Новый Соответствие;
		Иначе
			Значения = Новый Массив;
		КонецЕсли;
	Иначе
		Значения = Неопределено;
	КонецЕсли;
	
	ДанныеПредЗнач = ПолучитьДанныеПредопределенныхЗначений(СписокИдентификаторов, ПутьПоиска, МножественныйВыбор);
	ВыборкаСписок = ДанныеПредЗнач.ВыборкаСписок;
	ВыборкаЗначения = ДанныеПредЗнач.ВыборкаЗначения;
	
	// список значений
	Пока ВыборкаСписок.Следующий() Цикл
		ВыборкаДетальныеЗаписи = ВыборкаСписок.Выбрать();
		Значение = Новый Массив;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Значение.Добавить(ВыборкаДетальныеЗаписи.Значение);
		КонецЦикла;
		ДополнитьЗначенияПредопределенных(Значения, Значение, ВыборкаСписок.Идентификатор, МножественныйВыбор);
	КонецЦикла;
	
	// значение и пароль
	Пока ВыборкаЗначения.Следующий() Цикл
		Если ВыборкаЗначения.Пароль Тогда
			УИД = ВыборкаЗначения.Ссылка.УникальныйИдентификатор();
			Значение = ПолучитьПарольПоИдентификатору(УИД);
		Иначе
			Значение = ВыборкаЗначения.Значение;
		КонецЕсли;
		ДополнитьЗначенияПредопределенных(Значения, Значение, ВыборкаЗначения.Идентификатор, МножественныйВыбор);
	КонецЦикла;
	
	Возврат Значения;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеПредопределенныхЗначений(Идентификаторы, ПутьПоиска, МножественныйВыбор = Ложь)
	
	ДанныеПредЗнач = Новый Структура;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	пбп_ПредопределенныеЗначения.Ссылка КАК Ссылка,
		|	пбп_ПредопределенныеЗначения.СписокЗначений КАК СписокЗначений,
		|	пбп_ПредопределенныеЗначения.Пароль КАК Пароль,
		|	пбп_ПредопределенныеЗначения.Значение КАК Значение,
		|	пбп_ПредопределенныеЗначения.ИдентификаторНастройки КАК Идентификатор
		|ПОМЕСТИТЬ Предопределенные
		|ИЗ
		|	%1 КАК пбп_ПредопределенныеЗначения
		|ГДЕ
		|	пбп_ПредопределенныеЗначения.ИдентификаторНастройки В(&Идентификаторы)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредопределенныеЗначения.Ссылка КАК Ссылка,
		|	ПредопределенныеЗначения.СписокЗначений КАК СписокЗначений,
		|	ПредопределенныеЗначения.Пароль КАК Пароль,
		|	ВЫБОР
		|		КОГДА ПредопределенныеЗначения.СписокЗначений
		|			ТОГДА пбп_ПредопределенныеЗначенияЗначенияЭлементов.Значение
		|		КОГДА НЕ ПредопределенныеЗначения.Пароль
		|			ТОГДА ПредопределенныеЗначения.Значение
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК Значение,
		|	ПредопределенныеЗначения.Идентификатор КАК Идентификатор
		|ПОМЕСТИТЬ ЗначенияПредопределенных
		|ИЗ
		|	Предопределенные КАК ПредопределенныеЗначения
		|		ЛЕВОЕ СОЕДИНЕНИЕ %1.ЗначенияЭлементов КАК пбп_ПредопределенныеЗначенияЗначенияЭлементов
		|		ПО ПредопределенныеЗначения.Ссылка = пбп_ПредопределенныеЗначенияЗначенияЭлементов.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияПредопределенных.Значение КАК Значение,
		|	ЗначенияПредопределенных.Идентификатор КАК Идентификатор
		|ИЗ
		|	ЗначенияПредопределенных КАК ЗначенияПредопределенных
		|ГДЕ
		|	ЗначенияПредопределенных.СписокЗначений
		|ИТОГИ ПО
		|	Идентификатор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияПредопределенных.Ссылка КАК Ссылка,
		|	ЗначенияПредопределенных.Пароль КАК Пароль,
		|	ЗначенияПредопределенных.Значение КАК Значение,
		|	ЗначенияПредопределенных.Идентификатор КАК Идентификатор
		|ИЗ
		|	ЗначенияПредопределенных КАК ЗначенияПредопределенных
		|ГДЕ
		|	НЕ ЗначенияПредопределенных.СписокЗначений";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ПутьПоиска);
	Если Не МножественныйВыбор Тогда
		Схема = Новый СхемаЗапроса;
		Схема.УстановитьТекстЗапроса(ТекстЗапроса);
		ОператорВыбрать = Схема.ПакетЗапросов[0].Операторы[0];
		ВыражениеОтбора = 
			Новый ВыражениеСхемыЗапроса("пбп_ПредопределенныеЗначения.ИдентификаторНастройки = &Идентификаторы");
	
		ОператорВыбрать.КоличествоПолучаемыхЗаписей = 1;
		ОператорВыбрать.Отбор.Установить(0, ВыражениеОтбора);
		ТекстЗапроса = Схема.ПолучитьТекстЗапроса();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Идентификаторы", Идентификаторы);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ДанныеПредЗнач.Вставить("ВыборкаСписок", РезультатыЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам));
	ДанныеПредЗнач.Вставить("ВыборкаЗначения", РезультатыЗапроса[3].Выбрать());
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ДанныеПредЗнач;
	
КонецФункции

Процедура ДополнитьЗначенияПредопределенных(Приемник, Значение, Идентификатор = "", МножественныйВыбор = Ложь)

	Если МножественныйВыбор Тогда
		Если ТипЗнч(Приемник) = Тип("Соответствие") Тогда
			Приемник.Вставить(Идентификатор, Значение);
		Иначе
			Если ТипЗнч(Значение) = Тип("Массив") Тогда
				пбп_ОбщегоНазначенияСлужебныйКлиентСервер.ДополнитьМассив(Приемник, Значение);
			Иначе
				Приемник.Добавить(Значение);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Приемник = Значение;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПарольПоИдентификатору(УИД)
	
	ДанныеХранилища = пбп_ОбщегоНазначенияСлужебный.ПрочитатьДанныеИзБезопасногоХранилища(Строка(УИД));
	
	Значение = "";
	Если ТипЗнч(ДанныеХранилища) = Тип("Структура") Тогда
		Значение = пбп_ОбщегоНазначенияСлужебныйКлиентСервер.СвойствоСтруктуры(ДанныеХранилища, "bit_password", "");
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли