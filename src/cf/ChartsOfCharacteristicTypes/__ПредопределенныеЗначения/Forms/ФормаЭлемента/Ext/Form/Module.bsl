// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8,
// включая доработку типовых конфигураций.
//
// Copyright First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
//

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ДанныеХранилища = Неопределено;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Объект.Пароль Тогда
		ДанныеХранилища = Новый Структура("bit_password", Объект.Значение);
		__ОбщегоНазначенияСлужебный.ЗаписатьДанныеВБезопасноеХранилище(
			Строка(ТекущийОбъект.Ссылка.УникальныйИдентификатор()), ДанныеХранилища);
		ТекущийОбъект.Значение = "";
	Иначе
		__ОбщегоНазначенияСлужебный.ЗаписатьДанныеВБезопасноеХранилище(
			Строка(ТекущийОбъект.Ссылка.УникальныйИдентификатор()), Неопределено);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	УстановитьНаличиеПароля(ДанныеХранилища);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ВводСтрокиЗавершение",
		ЭтотОбъект, Новый Структура("РеквизитШапки, ТолькоПросмотр, Реквизит", Истина, Истина, "Наименование")),
		Объект.Наименование, НСтр("ru='Наименование'; en = 'Name'"), , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.Значение) <> Тип("Строка") Тогда
		
		Объект.Пароль = Ложь;
		
		__ОбщегоНазначенияСлужебныйКлиент.СообщитьПользователю(
			НСтр("ru='Пароль может использовать только тип ""Строка"".';
			| en='The password can only use the type ""String"".'"),
			Объект.Ссылка, "ТипЗначения", "Объект.ТипЗначения");
		
		Возврат;
		
	ИначеЕсли Объект.Пароль И Объект.СписокЗначений Тогда
		
		Объект.Пароль = Ложь;
		
		__ОбщегоНазначенияСлужебныйКлиент.СообщитьПользователю(
			НСтр("ru='Использование пароля недоступен для списка значений.';
			| en='Password usage is not available for the list of values.'"),
			Объект.Ссылка, "СписокЗначений", "Объект.СписокЗначений");
			
		Возврат;
		
	ИначеЕсли НЕ Объект.Пароль И ЗначениеЗаполнено(Объект.Значение) Тогда
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПарольПриИзмененииПродолжение", ЭтотОбъект),
			НСтр("ru='Пароль будет очищен. Продолжить?'; 
			| en='The password will be cleared. Continue?'"),
			РежимДиалогаВопрос.ДаНет, 60);
		
	Иначе
		УправлениеФормой();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗначенийПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеОткрытие(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Объект.Значение) <> Тип("Строка") ИЛИ Объект.Пароль Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ВводСтрокиЗавершение",
		ЭтотОбъект, Новый Структура("РеквизитШапки, Реквизит", Истина, "Значение")),
		Объект.Значение, НСтр("ru='Значение'; en = 'Value'"), , Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ВводСтрокиЗавершение",
		ЭтотОбъект, Новый Структура("РеквизитШапки, Реквизит", Истина, "Комментарий")),
		Объект.Комментарий, НСтр("ru='Комментарий'; en = 'Comment'"), , Истина);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовШапкиФормы

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ЗначенияЭлементовЗначениеОткрытие(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ЗначенияЭлементов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.Значение) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ВводСтрокиЗавершение",
		ЭтотОбъект, Новый Структура("РеквизитШапки, Реквизит", Ложь, ТекущиеДанные)),
		ТекущиеДанные.Значение, НСтр("ru='Значение'; en = 'Value'"), , Истина);
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовТаблицыФормы

#Область ОбработчикиКомандФормы

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()
	
	__ОбщегоНазначенияСлужебныйКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "НадписьНаличиеПароля", "Видимость", Объект.Пароль);
	__ОбщегоНазначенияСлужебныйКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "Значение", "Видимость", Не Объект.СписокЗначений);
	__ОбщегоНазначенияСлужебныйКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "Значение", "КнопкаВыбора", Не Объект.Пароль);
	__ОбщегоНазначенияСлужебныйКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "Значение", "РежимПароля", Объект.Пароль);
	__ОбщегоНазначенияСлужебныйКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "Значение", "КнопкаОткрытия", Не Объект.Пароль);
	__ОбщегоНазначенияСлужебныйКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ЗначенияЭлементов", "Видимость", Объект.СписокЗначений);
	__ОбщегоНазначенияСлужебныйКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "СписокЗначений", "ТолькоПросмотр", Объект.Пароль);
	
	УстановитьНаличиеПароля();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНаличиеПароля(ДанныеХранилища = Неопределено);
	
	Если НЕ Объект.Пароль Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеХранилища = Неопределено Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		ДанныеХранилища = __ОбщегоНазначенияСлужебный.ПрочитатьДанныеИзБезопасногоХранилища(
			Строка(Объект.Ссылка.УникальныйИдентификатор()));
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
	Если ТипЗнч(ДанныеХранилища) = Тип("Структура")
		И НЕ ПустаяСтрока(__ОбщегоНазначенияСлужебныйКлиентСервер.СвойствоСтруктуры(ДанныеХранилища, "bit_password", "")) Тогда
		
		Элементы.НадписьНаличиеПароля.Заголовок = НСтр("ru = 'Пароль установлен'");
	Иначе
		Элементы.НадписьНаличиеПароля.Заголовок = НСтр("ru = 'Пустой пароль'")
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзмененииПродолжение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.Значение = "";
	Иначе
		Объект.Пароль = Истина;
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ВводСтрокиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если __ОбщегоНазначенияСлужебныйКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "ТолькоПросмотр", Ложь) Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат <> Неопределено Тогда
		Если __ОбщегоНазначенияСлужебныйКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "РеквизитШапки", Ложь) Тогда
			Объект[ДополнительныеПараметры.Реквизит] = Результат;
		Иначе
			ДополнительныеПараметры.Реквизит.Значение = Результат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции