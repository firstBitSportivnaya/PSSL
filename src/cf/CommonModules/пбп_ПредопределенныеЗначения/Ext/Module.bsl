// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8,
// включая доработку типовых конфигураций.
//
// Copyright First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
//

#Область ПрограммныйИнтерфейс

Процедура ИнициализироватьПредопределенныеЗначения() Экспорт
	
	ТЗПредопределенныхЗначений = пбп_ПредопределенныеЗначенияПереопределяемый.ПредопределенныеЗначения();
	
	ТЗПредопределенныхЗначенийКСозданию = ПредопределенныеЗначенияКСозданию(ТЗПредопределенныхЗначений);
	
	СоздатьПредопределенныеЗначения(
		ТЗПредопределенныхЗначенийКСозданию,
		ПланыВидовХарактеристик.пбп_ПредопределенныеЗначения);
	
КонецПроцедуры

// Создание предопределенных значений на основании заполненной таблицы
//
// Параметры:
//  Таблица			 - ТаблицаЗначений - см. пбп_ПредопределенныеЗначенияПереопределяемыйТаблицаПредопределенных,
//										 пбп_ТипСоответствияОбъектовИБПереопределяемый.ТаблицаПредопределенных
//  МенеджерОбъекта	 - СправочникМенеджер, ДокументМенеджер, ОбработкаМенеджер, РегистрСведенийМенеджер - менеджер объекта.
//
Процедура СоздатьПредопределенныеЗначения(Таблица, МенеджерОбъекта) Экспорт
	
	Если Не ЗначениеЗаполнено(Таблица) Тогда
		Возврат;
	КонецЕсли;
	
	Группы = Новый Соответствие;
	КолонкаСуществует = Таблица.Колонки.Найти("ЭтоГруппа") <> Неопределено;
	
	Если КолонкаСуществует Тогда
		
		// Сначала создаются группы, затем элементы
		Таблица.Сортировать("ЭтоГруппа УБЫВ, УровеньИерархии");
		
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	пбп_ПредопределенныеЗначения.Ссылка КАК Ссылка,
			|	пбп_ПредопределенныеЗначения.ИдентификаторНастройки КАК ИдентификаторНастройки
			|ИЗ
			|	%1 КАК пбп_ПредопределенныеЗначения
			|ГДЕ
			|	пбп_ПредопределенныеЗначения.ЭтоГруппа";
		
		ПолноеИмяОМ = Метаданные.НайтиПоТипу(ТипЗнч(МенеджерОбъекта)).ПолноеИмя();
		
		Запрос = Новый Запрос;
		Запрос.Текст = СтрШаблон(ТекстЗапроса, ПолноеИмяОМ);
		
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Группы.Вставить(ВыборкаДетальныеЗаписи.ИдентификаторНастройки, ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		Если КолонкаСуществует И СтрокаТаблицы.ЭтоГруппа Тогда
			СоздатьПредопределеннуюГруппу(МенеджерОбъекта, СтрокаТаблицы, Группы);
		Иначе
			СоздатьПредопределенныйЭлемент(МенеджерОбъекта, СтрокаТаблицы, Группы, КолонкаСуществует);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПредопределенныеЗначенияКСозданию(ТЗПредопределенныхЗначений, ПутьПоиска = "ПланВидовХарактеристик.пбп_ПредопределенныеЗначения") Экспорт

	ИдентификаторыНастроек = ТЗПредопределенныхЗначений.ВыгрузитьКолонку("ИдентификаторНастройки");
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	пбп_ПредопределенныеЗначения.ИдентификаторНастройки КАК ИдентификаторНастройки
		|ИЗ
		|	%1 КАК пбп_ПредопределенныеЗначения
		|ГДЕ
		|	пбп_ПредопределенныеЗначения.ИдентификаторНастройки В (&СписокИдентификаторов)";
		
	Запрос.Текст = СтрШаблон(ТекстЗапроса, ПутьПоиска);
	
	Запрос.УстановитьПараметр("СписокИдентификаторов", ИдентификаторыНастроек);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СтрокиДляУдаления = Новый Массив;
	Для Каждого Строка Из ТЗПредопределенныхЗначений Цикл
		ВыборкаДетальныеЗаписи.Сбросить();
		Если ВыборкаДетальныеЗаписи.НайтиСледующий(Строка.ИдентификаторНастройки, "ИдентификаторНастройки") Тогда
			СтрокиДляУдаления.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из СтрокиДляУдаления Цикл
		ТЗПредопределенныхЗначений.Удалить(Строка);
	КонецЦикла;
	
	Возврат ТЗПредопределенныхЗначений;
	
КонецФункции

Процедура СоздатьПредопределеннуюГруппу(МенеджерОбъекта, СтрокаТаблицы, Группы)
	
	НоваяГруппа = МенеджерОбъекта.СоздатьГруппу();
	ЗаполнитьЗначенияСвойств(НоваяГруппа, СтрокаТаблицы, "Наименование,ИдентификаторНастройки");
	Если ЗначениеЗаполнено(СтрокаТаблицы.Родитель) Тогда
		Родитель = Группы.Получить(СтрокаТаблицы.Родитель);
		НоваяГруппа.Родитель = Родитель;
	КонецЕсли;
	
	Попытка
		НоваяГруппа.Записать();
	Исключение
		пбп_ОбщегоНазначенияСлужебный.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
	
	Группы.Вставить(СтрокаТаблицы.ИдентификаторНастройки, НоваяГруппа.Ссылка);
	
КонецПроцедуры

Процедура СоздатьПредопределенныйЭлемент(МенеджерОбъекта, СтрокаТаблицы, Родители, ЗаполнитьРодителя = Ложь)
	
	ПроверяемыйТип = ТипЗнч(МенеджерОбъекта);
	
	НовыйЭлемент = МенеджерОбъекта.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НовыйЭлемент, СтрокаТаблицы);
	Если ЗаполнитьРодителя И ЗначениеЗаполнено(СтрокаТаблицы.Родитель) Тогда
		Родитель = Родители.Получить(СтрокаТаблицы.Родитель);
		НовыйЭлемент.Родитель = Родитель;
	КонецЕсли;
	
	// инициализация значения по умолчанию
	Если ПроверяемыйТип = Тип("ПланВидовХарактеристикМенеджер.пбп_ПредопределенныеЗначения") Тогда
		НовыйЭлемент.Значение = СтрокаТаблицы.ТипЗначения.ПривестиЗначение();
	КонецЕсли;
	
	Попытка
		НовыйЭлемент.Записать();
	Исключение
		пбп_ОбщегоНазначенияСлужебный.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти