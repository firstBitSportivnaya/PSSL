// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8,
// включая доработку типовых конфигураций.
//
// Copyright First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
//

////////////////////////////////////////////////////////////////////////////////
// Файловая система служебный клиент: аналог модуля БСП

#Область СлужебныйПрограммныйИнтерфейс

#Область РасширениеРаботыСФайлами

Процедура НачатьПодключениеРасширенияРаботыСФайламиПриУстановкеРасширения(Подключено, Контекст) Экспорт
	
	// Если расширение и так уже подключено, незачем про него спрашивать.
	Если Подключено Тогда
		ВыполнитьОбработкуОповещения(Контекст.ОписаниеОповещенияЗавершение, "ПодключениеНеТребуется");
		Возврат;
	КонецЕсли;
	
	ВызватьИсключение НСтр("ru = 'Невозможно работать с файловой системой из браузера';");
	
КонецПроцедуры

Процедура НачатьПодключениеРасширенияРаботыСФайламиПриОтветеНаВопросОбУстановке(Действие, ОповещениеОЗакрытии) Экспорт
	
	РасширениеПодключено = (Действие = "РасширениеПодключено" Или Действие = "ПодключениеНеТребуется");
	
	ВыполнитьОбработкуОповещения(ОповещениеОЗакрытии, РасширениеПодключено);
	
КонецПроцедуры

#КонецОбласти // РасширениеРаботыСФайлами

#Область ВременныеФайлы

#Область СоздатьВременныйКаталог

// Аналог метода БСП. Продолжение процедуры ФайловаяСистемаКлиент.СоздатьВременныйКаталог.
// 
// Параметры:
//  РасширениеПодключено - Булево
//  Контекст - Структура:
//   * Оповещение - ОписаниеОповещения
//   * Расширение - Строка
//
Процедура СоздатьВременныйКаталогПослеПроверкиРасширенияРаботыСФайлами(РасширениеПодключено, Контекст) Экспорт
	
	Если РасширениеПодключено Тогда
		Оповещение = Новый ОписаниеОповещения(
			"СоздатьВременныйКаталогПослеПолученияВременногоКаталога", ЭтотОбъект, Контекст,
			"СоздатьВременныйКаталогПриОбработкеОшибки", ЭтотОбъект);
		НачатьПолучениеКаталогаВременныхФайлов(Оповещение);
	Иначе
		СоздатьВременныйКаталогОповеститьОбОшибке(НСтр("ru = 'Не удалось установить расширение для работы с 1С:Предприятием.'"), Контекст);
	КонецЕсли;
	
КонецПроцедуры

// Аналог метода БСП. Продолжение процедуры ФайловаяСистемаКлиент.СоздатьВременныйКаталог.
// 
// Параметры:
//  ИмяКаталогаВременныхФайлов - Строка
//  Контекст - Структура:
//   * Оповещение - ОписаниеОповещения
//   * Расширение - Строка
//
Процедура СоздатьВременныйКаталогПослеПолученияВременногоКаталога(ИмяКаталогаВременныхФайлов, Контекст) Экспорт 
	
	Оповещение = Контекст.Оповещение;
	Расширение = Контекст.Расширение;
	
	ИмяКаталога = "v8_" + Строка(Новый УникальныйИдентификатор);
	
	Если Не ПустаяСтрока(Расширение) Тогда 
		ИмяКаталога = ИмяКаталога + "." + Расширение;
	КонецЕсли;
	
	НачатьСозданиеКаталога(Оповещение, ИмяКаталогаВременныхФайлов + ИмяКаталога);
	
КонецПроцедуры

// Аналог метода БСП. Продолжение процедуры ФайловаяСистемаКлиент.СоздатьВременныйКаталог.
Процедура СоздатьВременныйКаталогПриОбработкеОшибки(ИнформацияОбОшибке, СтандартнаяОбработка, Контекст) Экспорт 
	
	СтандартнаяОбработка = Ложь;
	ОписаниеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
	СоздатьВременныйКаталогОповеститьОбОшибке(ОписаниеОшибки, Контекст);
	
КонецПроцедуры

// Аналог метода БСП. Продолжение процедуры ФайловаяСистемаКлиент.СоздатьВременныйКаталог.
Процедура СоздатьВременныйКаталогОповеститьОбОшибке(ОписаниеОшибки, Контекст)
	
	ПоказатьПредупреждение(, ОписаниеОшибки);
	ИмяКаталога = "";
	ВыполнитьОбработкуОповещения(Контекст.Оповещение, ИмяКаталога);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти // СлужебныйПрограммныйИнтерфейс