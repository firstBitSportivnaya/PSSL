// Библиотека проектных подсистем для упрощения разработки архитектуры на 1С: Предприятие 8, включая доработку типовых конфигураций.
//
// Copyright 2017-2024 First BIT company
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//
//
// URL:    https://github.com/firstBitSportivnaya/PSSL/
// e-mail: ivssmirnov@1bit.com
// Версия: 1.0.0.1
//
// Требования: платформа 1С версии 8.3.17 и выше

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если Не ЭтоГруппа Тогда
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			ДанныеЗаполнения.Свойство("Наименование", Наименование);
			ДанныеЗаполнения.Свойство("Контекст", Контекст);
			ДанныеЗаполнения.Свойство("КодПодпрограммы", КодПодпрограммы);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Контекст) Тогда
			Контекст = Перечисления.__КонтекстыВыполненияПользовательскихФункций.Произвольный;
		КонецЕсли;
		
		Если ПустаяСтрока(КодПодпрограммы) Тогда
			КодПодпрограммы = СтрШаблон("Результат = %1", КодПодпрограммы + Символы.ПС);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// ++ Обход ошибки отстутствия модуля БСП, не переносить
	ОбщегоНазначения = Неопределено;
	// -- Обход ошибки отстутствия модуля БСП, не переносить
	
	СтруктураПараметров = Новый Структура;
	
	Для Каждого СтрокаТаблицы Из Переменные Цикл
		
		НомерСтроки = СтрокаТаблицы.НомерСтроки - 1;
		
		Попытка
			СвойствоДоступно = СтруктураПараметров.Свойство(СтрокаТаблицы.Имя);
		Исключение
			СвойствоДоступно = Ложь;
		КонецПопытки;
		
		Если Не СвойствоДоступно Тогда
			
			Попытка
				СтруктураПараметров.Вставить(СтрокаТаблицы.Имя);
			Исключение
				
				ТекстСообщения = СтрШаблон(НСтр("ru='Обнаружено некорректное имя ""%1"" в таблице ""Переменные"".';
					|en='Found an incorrect name ""%1"" in table ""Variables.""'"),СтрокаТаблицы.Имя);
				ОбщегоНазначения.СообщитьПользователю(
					ТекстСообщения, ЭтотОбъект, СтрШаблон("Переменные[%1].Имя", НомерСтроки),, Отказ);
			КонецПопытки;
		Иначе
			
			ТекстСообщения = СтрШаблон(НСтр("ru='Обнаружено дублирующееся имя ""%1"" в таблице ""Переменные"".';
				|en='Found a duplicate name ""%1"" in the table ""Variables.""'"), СтрокаТаблицы.Имя);
			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения, ЭтотОбъект, СтрШаблон("Переменные[%1].Имя", НомерСтроки),, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Иначе
  ВызватьИсключение НСтр("ru='Недопустимый вызов объекта на клиенте.';en='Invalid object call on client'");
#КонецЕсли